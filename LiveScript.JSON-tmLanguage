{
    "name": "LiveScript",
    "scopeName": "source.LiveScript",
    "fileTypes": ["ls"],
    "patterns": [
        {
            "include": "#numeric"
        },
        {
            "include": "#keywords"
        },
        {
            "name": "comment.LiveScript",
            "match": "#.*$",
            "comment": "Single line comment."
        },
        {
            "name": "comment.LiveScript",
            "begin": "/\\*",
            "end": "\\*/",
            "comment": "Block comment."
        },
        {
            "name": "string.LiveScript",
            "begin": "\"",
            "beginCaptures": {
                "0": { "name": "punctuation.definition.string.begin.LiveScript" }
            },
            "end": "\"",
            "endCaptures": {
                "0": { "name": "punctuation.definition.string.end.LiveScript" }
            },
            "patterns": [
                {
                    "include": "#interpolated"
                }
            ],
            "comment": "Double quoted string."
        },
        {
            "name": "string.LiveScript",
            "begin": "'",
            "beginCaptures": {
                "0": { "name": "punctuation.definition.string.begin.LiveScript" }
            },
            "end": "'",
            "endCaptures": {
                "0": { "name": "punctuation.definition.string.end.LiveScript" }
            },
            "comment": "Single quoted string."
        },
        {
            "name": "string.LiveScript",
            "match": "(\\\\)(.*?)(\\s)",
            "captures": {
                "1": { "name": "punctuation.definition.string.begin.LiveScript" },
                "2": { "name": "definition.string.quoted.single.LiveScript" },
                "3": { "name": "punctuation.definition.string.end.LiveScript" }
            },
            "comment": "String without whitespace."
        },
        {
            "name": "regex.LiveScript",
            "begin": "/",
            "beginCaptures": {
                "0": { "name": "string.regexp.LiveScript" }
            },
            "end": "/g?i?m?",
            "endCaptures": {
                "0": { "name": "string.regexp.LiveScript" }
            },
            "patterns": [
                {
                    "name": "string.LiveScript",
                    "match": "([^*\\\\\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)*\\])([^\\\\\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)*\\])*?"
                }
            ],
            "comment": "Single or multiline regexp."
        }
    ],
    "repository": {
        "interpolated": {
            "patterns": [
                {
                    "name": "source.LiveScript.embedded.source",
                    "begin": "\\#\\{",
                    "end": "\\}",
                    "patterns": [
                        { "include": "$self" }
                    ],
                    "comment": "Interpolated complex LiveScript expressions within strings."
                },
                {
                    "name": "source.LiveScript.embedded.source",
                    "match": "\\#(\\w*)\\b",
                    "comment": "Interpolated simple LiveScript variables within strings."
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "constant.language.boolean.LiveScript",
                    "match": "\\b(true|false|on|off|yes|no)\\b"
                },
                {
                    "name": "constant.language.LiveScript",
                    "match": "\\b(null|undefined|void)\\b"
                },
                {
                    "name": "constant.language.LiveScript",
                    "match": "@[\\w$]*"
                }
            ]
        },
        "numeric": {
            "patterns": [
                {
                    "name": "constant.numeric.LiveScript",
                    "match": "\\b(\\d{1,2}~[\\d\\w]+)|(\\d+[\\d_]*(\\.[\\d_]+)?(e[+-]?[\\d_]+)?(\\w*))\\b",
                    "captures": {
                        "5": { "name": "punctuation.definition.string.begin.LiveScript" }
                    },
                    "comment": "All numbers, different bases, decimals, underscores and trailing characters."
                }
            ]
        }
    },
    "uuid": "3dd79e1c-6cf0-4302-947b-ef00aa5e2a8d"
}
